info:
  name: pyload-ng
  cve: CVE-2025-53890
  summary: pyLoad vulnerable to XSS and potential RCE through insecure CAPTCHA processing
  details: |
    An unsafe JavaScript evaluation vulnerability exists in pyLoad's CAPTCHA processing code via the use of `eval()` on unsanitized user input. This allows unauthenticated remote attackers to inject and execute arbitrary JavaScript in the client browser, which may escalate to backend server command execution depending on the runtime environment.
    The vulnerable function:
    ```javascript
    function onCaptchaResult(result) {
        eval(result); // Direct execution of attacker-controlled input
    }
    ```
    Exploitation requires no authentication or user interaction. Attackers can send a crafted POST request to:
    ```
    /interactive/captcha
    ```
    
    Example PoC:
    ```bash
    curl -X POST "http://localhost:8000/interactive/captcha" \
      -d "cid=123&response=1%3Balert(document.cookie)"
    ```
    This flaw can lead to session hijacking, credential theft, and potentially full remote code execution.
  cvss: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
  severity: CRITICAL
  security_advise: |
    1. Upgrade to pyload-ng version 0.20 or later.
    2. Avoid using versions prior to commit 909e5c97885237530d1264cfceb5555870eb9546.
    3. Sanitize all user inputs, especially those passed into JavaScript contexts.
    4. Replace any usage of `eval()` with safer alternatives such as JSON parsing or sandboxed execution.
rule: version >= "0" && version < "0.20"
references:
  - https://github.com/pyload/pyload/security/advisories/GHSA-8w3f-4r8f-pf53
  - https://nvd.nist.gov/vuln/detail/CVE-2025-53890
  - https://github.com/pyload/pyload/pull/4586
  - https://github.com/pyload/pyload/commit/909e5c97885237530d1264cfceb5555870eb9546
  - https://github.com/pyload/pyload